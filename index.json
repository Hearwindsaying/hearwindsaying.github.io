[{"authors":null,"categories":null,"content":"I am a software engineer keen on computer graphics, especially rendering. Currently I am an undergrad at South China Agricultural University.\nPreviously I worked on analytical area light integration for interests, advised by Dr. Li-Yi Wei.\n","date":1598918400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a software engineer keen on computer graphics, especially rendering. Currently I am an undergrad at South China Agricultural University.\nPreviously I worked on analytical area light integration for interests, advised by Dr.","tags":null,"title":"Zihong Zhou","type":"authors"},{"authors":["Zihong Zhou","Li-Yi Wei"],"categories":null,"content":"Summary We present triple sphere, a method to integrate spherical lights over spherical caps via spherical harmonics for rendering applications.\n","date":1598918400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1598918400,"objectID":"53e70e40936470c23eef90852de6774e","permalink":"https://hearwindsaying.github.io/publication/triplesphere/","publishdate":"2020-09-01T00:00:00Z","relpermalink":"/publication/triplesphere/","section":"publication","summary":"In *SIGGRAPH Asia 2020 Technical Communications*","tags":[],"title":"Spherical Light Integration over Spherical Caps via Spherical Harmonics","type":"publication"},{"authors":null,"categories":null,"content":"Overview Colvillea is a physically based global illumination renderer running on GPU. It relies on NVIDIA\u0026rsquo;s OptiX to achieve parallelism by leveraging GPU resources, resulting in high performance ray tracing rendering.\nMotivation Here are some motivations and objectives of building Colvillea:\n Ease for implementation of ray tracer in GPU. Writing a GPU renderer from scratch could be of great difficulty and hard to get optimal performance. Debugging is also a pain in the neck. There might be a way out for all these problems thanks to OptiX. Deliver RTX hardware acceleration for faster rendering. OptiX is one of the three ways for enabling RTCores so as to achieve higher ray tracing efficiency when possible. Potential for implementation of some state-of-the-art rendering technologies. This is a personal project written during my learning of computer graphics. In the end, it should be both easy and convenient to extend to adding more features. It\u0026rsquo;s also interesting to try out rendering algorithms in GPU to explore a better efficiency.  Features Light Transport  Direct Lighting Unidirectional Path Tracing  Reflection Models  Lambertian BRDF Specular BRDF (Perfect Mirror) Specular BSDF (Perfect Glass) Ashikhmin-Shirley BRDF (Rough Plastic) GGX Microfacet BRDF (Rough Conductor) GGX Microfacet BSDF (Rough Dielectric) Dielectric-Couductor Two Layered BSDF  Sampler  Independent Sampler Halton QMC Sampler (Fast Random Permutation) Sobol QMC Sampler  Filter (Progressive)  Box filter Gaussian filter  Rendering Mode  Progressive Rendering  Light Source Models  Point Light Quad Light (Spherical Rectangular Sampling) Image-Based Lighting (HDRI Probe)  Camera  Pinhole Camera Depth of Field  Geometry  Triangle Mesh (Wavefront OBJ)  Miscellaneous  LDR/HDR Image I/O with Gamma Correction Interactive rendering with editing scene  Work In Progress  Upgrade to OptiX 7.1 Refactor the renderer architecture: wavefront ray tracing  Build Building Colvillea requires OptiX 6.0 (6.5 is preferred) and CUDA 9.0 or above installed. For graphics driver on Windows platform, driver version 436.02 or later is required. All NVIDIA GPUs of Compute Capability 5.0 (Maxwell) or higher are supported but those with Turing architecture is required to access RTX hardware acceleration.\nColvillea currently builds on Windows only using CMake and could be built using MSVC successfully. It\u0026rsquo;s recommeded that create a separte directory in the same level folder as src folder. Note that you are required to use VS2015 or above targeted for 64-bit as CUDA_HOST_COMPILER in configuration step. For better layout to support interactive rendering, please put imgui.ini file to the same directory as colvillea.vcxproj.\nReferences Nvidia OptiX\nPBRT\nMitsuba\n","date":1594771200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594771200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://hearwindsaying.github.io/project/example/","publishdate":"2020-07-15T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"A Physically Based GPU Ray Tracer","tags":["Ray Tracing","GPU","Physically Based Rendering"],"title":"Colvillea","type":"project"},{"authors":[],"categories":[],"content":"aaa\n","date":1572566400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572566400,"objectID":"431c0f3f6aea07e8fa8c5445342b5bd7","permalink":"https://hearwindsaying.github.io/project/livingroom-in-unity/","publishdate":"2019-11-01T00:00:00Z","relpermalink":"/project/livingroom-in-unity/","section":"project","summary":"A course project work for Virtual Reality which explores Lightmapping techniques with the newest High-Definition Rendering Pipeline in Unity. With prebaked global illumination using ray tracing methodology, it brings the Living-Room scene to the word-class game engine.","tags":["Unity","Prebaked Ray Tracing","Digital Art"],"title":"Living-Room in Unity","type":"project"},{"authors":[],"categories":[],"content":"Summary A simple photoviewer written for OOP course using C++/WinRT deployed at Universal Windows Platform. Common file management operations like copy, paste, remove etc. are supported. Standard C++17 and XAML language are used for the project. Several optimization techniques are employed to provide the user with a smooth interaction when previewing large image files.\n","date":1552176000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552176000,"objectID":"5cf7a14226181e96d6cd8e73955e98fa","permalink":"https://hearwindsaying.github.io/project/simple-photo-viewer/","publishdate":"2019-03-10T00:00:00Z","relpermalink":"/project/simple-photo-viewer/","section":"project","summary":"A simple photoviewer written for OOP course using C++/WinRT deployed at Universal Windows Platform. Common file management operations like copy, paste, remove etc. are supported. Standard C++17 and XAML language are used for the project. Several optimization techniques are employed to provide the user with a smooth interaction when previewing large image files.","tags":[],"title":"Simple Photo Viewer","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://hearwindsaying.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Zihong Zhou","吳恩達"],"categories":["Demo","教程"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.   Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Wowchemy Admin: An admin tool to automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://hearwindsaying.github.io/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"}]